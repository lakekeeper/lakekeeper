{
  "db_name": "PostgreSQL",
<<<<<<<< HEAD:.sqlx/query-bac81d1da85f779cdade01163cb7a2942d1a2a2b8725d15f3d253d981cf185d2.json
  "query": "\n        SELECT\n            t.\"table_id\",\n            ti.name as \"table_name\",\n            ti.fs_location as \"table_fs_location\",\n            ti.fs_protocol as \"table_fs_protocol\",\n            namespace_name,\n            ti.namespace_id,\n            t.\"metadata\" as \"metadata: Json<TableMetadata>\",\n            ti.\"metadata_location\",\n            w.storage_profile as \"storage_profile: Json<StorageProfile>\",\n            w.\"storage_secret_id\"\n        FROM \"table\" t\n        INNER JOIN tabular ti ON ti.warehouse_id = $1 AND t.table_id = ti.tabular_id\n        INNER JOIN namespace n ON ti.namespace_id = n.namespace_id\n        INNER JOIN warehouse w ON w.warehouse_id = $1\n        WHERE t.warehouse_id = $1 AND t.\"table_id\" = $2\n            AND w.status = 'active'\n            AND (ti.deleted_at IS NULL OR $3)\n        ",
|||||||| be020da7:.sqlx/query-255113e1039e5e4ae70291d4e81da9d8b5e8d77102dc9712655dcfdfbc47dd7a.json
  "query": "\n        SELECT\n            t.\"table_id\",\n            ti.name as \"table_name\",\n            ti.fs_location as \"table_fs_location\",\n            ti.fs_protocol as \"table_fs_protocol\",\n            namespace_name,\n            ti.namespace_id,\n            t.\"metadata\" as \"metadata: Json<TableMetadata>\",\n            ti.\"metadata_location\",\n            w.storage_profile as \"storage_profile: Json<StorageProfile>\",\n            w.\"storage_secret_id\"\n        FROM \"table\" t\n        INNER JOIN tabular ti ON t.table_id = ti.tabular_id\n        INNER JOIN namespace n ON ti.namespace_id = n.namespace_id\n        INNER JOIN warehouse w ON n.warehouse_id = w.warehouse_id\n        WHERE w.warehouse_id = $1 AND t.\"table_id\" = $2\n            AND w.status = 'active'\n            AND (ti.deleted_at IS NULL OR $3)\n        ",
========
  "query": "\n        SELECT\n            t.\"table_id\",\n            ti.name as \"table_name\",\n            ti.fs_location as \"table_fs_location\",\n            ti.fs_protocol as \"table_fs_protocol\",\n            namespace_name,\n            ti.namespace_id,\n            t.\"metadata\" as \"metadata: Json<TableMetadata>\",\n            ti.\"metadata_location\",\n            w.storage_profile as \"storage_profile: Json<StorageProfile>\",\n            w.\"storage_secret_id\"\n        FROM \"table\" t\n        INNER JOIN tabular ti ON ti.warehouse_id = $1 AND t.table_id = ti.tabular_id\n        INNER JOIN namespace n ON ti.namespace_id = n.namespace_id AND n.warehouse_id = $1\n        INNER JOIN warehouse w ON w.warehouse_id = $1\n        WHERE t.warehouse_id = $1 AND t.\"table_id\" = $2\n            AND w.status = 'active'\n            AND (ti.deleted_at IS NULL OR $3)\n        ",
>>>>>>>> origin/main:.sqlx/query-f2cc75308af6b01a24782990c27c2f1038a2e8b7efee7c3efd40746c563e474d.json
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "table_id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "table_name",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "table_fs_location",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "table_fs_protocol",
        "type_info": "Text"
      },
      {
        "ordinal": 4,
        "name": "namespace_name",
        "type_info": "TextArray"
      },
      {
        "ordinal": 5,
        "name": "namespace_id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 6,
        "name": "metadata: Json<TableMetadata>",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 7,
        "name": "metadata_location",
        "type_info": "Text"
      },
      {
        "ordinal": 8,
        "name": "storage_profile: Json<StorageProfile>",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 9,
        "name": "storage_secret_id",
        "type_info": "Uuid"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "Uuid",
        "Bool"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      true
    ]
  },
<<<<<<<< HEAD:.sqlx/query-bac81d1da85f779cdade01163cb7a2942d1a2a2b8725d15f3d253d981cf185d2.json
  "hash": "bac81d1da85f779cdade01163cb7a2942d1a2a2b8725d15f3d253d981cf185d2"
|||||||| be020da7:.sqlx/query-255113e1039e5e4ae70291d4e81da9d8b5e8d77102dc9712655dcfdfbc47dd7a.json
  "hash": "255113e1039e5e4ae70291d4e81da9d8b5e8d77102dc9712655dcfdfbc47dd7a"
========
  "hash": "f2cc75308af6b01a24782990c27c2f1038a2e8b7efee7c3efd40746c563e474d"
>>>>>>>> origin/main:.sqlx/query-f2cc75308af6b01a24782990c27c2f1038a2e8b7efee7c3efd40746c563e474d.json
}
