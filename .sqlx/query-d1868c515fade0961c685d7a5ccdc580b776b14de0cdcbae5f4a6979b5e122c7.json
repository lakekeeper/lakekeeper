{
  "db_name": "PostgreSQL",
  "query": "\n            WITH locked AS (\n                SELECT * FROM task WHERE task_id = $1 AND attempt = $3 FOR UPDATE\n            ),\n            task_log_attempt AS (\n                SELECT message, task_created_at FROM task_log WHERE task_id = $1 AND attempt = $3\n            ),\n            log_insert AS (\n                INSERT INTO task_log(\n                    task_id,\n                    warehouse_id,\n                    queue_name,\n                    task_data,\n                    status,\n                    entity_id,\n                    entity_type,\n                    entity_name,\n                    message,\n                    attempt,\n                    started_at,\n                    duration,\n                    progress,\n                    execution_details,\n                    attempt_scheduled_for,\n                    last_heartbeat_at,\n                    parent_task_id,\n                    task_created_at\n                )\n                SELECT \n                    task_id,\n                    warehouse_id,\n                    queue_name,\n                    task_data,\n                    'failed',\n                    entity_id,\n                    entity_type,\n                    entity_name,\n                    $2,\n                    attempt,\n                    picked_up_at,\n                    now() - picked_up_at,\n                    progress,\n                    execution_details,\n                    scheduled_for,\n                    last_heartbeat_at,\n                    parent_task_id,\n                    created_at\n                FROM locked\n                ON CONFLICT (task_id, attempt) DO NOTHING\n                RETURNING task_id as log_task_id\n            ),\n            task_update AS (\n                UPDATE task t\n                SET \n                    status = 'scheduled',\n                    progress = 0.0,\n                    picked_up_at = NULL,\n                    execution_details = NULL\n                FROM locked\n                WHERE t.task_id = locked.task_id AND t.attempt = locked.attempt\n                RETURNING t.task_id as updated_task_id\n            )\n            SELECT \n                (EXISTS(SELECT 1 FROM task_log_attempt) OR EXISTS(SELECT 1 FROM locked)) as \"task_log_exists!\",\n                EXISTS(SELECT 1 FROM log_insert) as \"log_inserted!\",\n                (SELECT message FROM task_log_attempt) as \"conflicting_message\",\n                (SELECT task_created_at FROM task_log_attempt) as \"conflicting_created_at\"\n            ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "task_log_exists!",
        "type_info": "Bool"
      },
      {
        "ordinal": 1,
        "name": "log_inserted!",
        "type_info": "Bool"
      },
      {
        "ordinal": 2,
        "name": "conflicting_message",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "conflicting_created_at",
        "type_info": "Timestamptz"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "Text",
        "Int4"
      ]
    },
    "nullable": [
      null,
      null,
      null,
      null
    ]
  },
  "hash": "d1868c515fade0961c685d7a5ccdc580b776b14de0cdcbae5f4a6979b5e122c7"
}
