{
  "db_name": "PostgreSQL",
  "query": "\n            WITH moved AS (\n                DELETE FROM task WHERE task_id = $1 AND attempt = $2 RETURNING *\n            ),\n            task_log_attempt AS (\n                SELECT message, task_created_at FROM task_log WHERE task_id = $1 AND attempt = $2\n            ),\n            log_insert AS (\n                INSERT INTO task_log(\n                    task_id,\n                    warehouse_id,\n                    queue_name,\n                    task_data,\n                    status,\n                    entity_id,\n                    entity_type,\n                    entity_name,\n                    message,\n                    attempt,\n                    started_at,\n                    duration,\n                    progress,\n                    execution_details,\n                    attempt_scheduled_for,\n                    last_heartbeat_at,\n                    parent_task_id,\n                    task_created_at\n                )\n                SELECT\n                    task_id,\n                    warehouse_id,\n                    queue_name,\n                    task_data,\n                    'failed',\n                    entity_id,\n                    entity_type,\n                    entity_name,\n                    $3,\n                    attempt,\n                    picked_up_at,\n                    now() - picked_up_at,\n                    progress,\n                    execution_details,\n                    scheduled_for,\n                    last_heartbeat_at,\n                    parent_task_id,\n                    created_at\n                FROM moved\n                ON CONFLICT (task_id, attempt) DO NOTHING\n                RETURNING task_id as log_task_id\n            )\n            SELECT \n                (EXISTS(SELECT 1 FROM task_log_attempt) OR EXISTS(SELECT 1 FROM moved)) as \"task_log_exists!\",\n                EXISTS(SELECT 1 FROM log_insert) as \"log_inserted!\",\n                (SELECT message FROM task_log_attempt) as \"conflicting_message\",\n                (SELECT task_created_at FROM task_log_attempt) as \"conflicting_created_at\"\n            ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "task_log_exists!",
        "type_info": "Bool"
      },
      {
        "ordinal": 1,
        "name": "log_inserted!",
        "type_info": "Bool"
      },
      {
        "ordinal": 2,
        "name": "conflicting_message",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "conflicting_created_at",
        "type_info": "Timestamptz"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "Int4",
        "Text"
      ]
    },
    "nullable": [
      null,
      null,
      null,
      null
    ]
  },
  "hash": "7c06f9bb89efad1f2237875549ecaa391db5bdad89adf2d0a49e80d56d25a00d"
}
