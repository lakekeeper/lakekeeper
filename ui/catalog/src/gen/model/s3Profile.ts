/**
 * iceberg-catalog
 * Implementation of the Iceberg REST Catalog server. 
 *
 * The version of the OpenAPI document: 0.4.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { S3Flavor } from './s3Flavor';

export class S3Profile {
    /**
    * Optional ARN to assume when accessing the bucket
    */
    'assumeRoleArn'?: string | null;
    /**
    * Name of the S3 bucket
    */
    'bucket': string;
    /**
    * Optional endpoint to use for S3 requests, if not provided the region will be used to determine the endpoint. If both region and endpoint are provided, the endpoint will be used. Example: `http://s3-de.my-domain.com:9000`
    */
    'endpoint'?: string | null;
    'flavor'?: S3Flavor;
    /**
    * Subpath in the bucket to use. The same prefix can be used for multiple warehouses.
    */
    'keyPrefix'?: string | null;
    /**
    * Path style access for S3 requests. If the underlying S3 supports both, we recommend to not set `path_style_access`.
    */
    'pathStyleAccess'?: boolean | null;
    /**
    * Region to use for S3 requests.
    */
    'region': string;
    'stsEnabled': boolean;
    /**
    * Optional role ARN to assume for sts vended-credentials
    */
    'stsRoleArn'?: string | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "assumeRoleArn",
            "baseName": "assume-role-arn",
            "type": "string"
        },
        {
            "name": "bucket",
            "baseName": "bucket",
            "type": "string"
        },
        {
            "name": "endpoint",
            "baseName": "endpoint",
            "type": "string"
        },
        {
            "name": "flavor",
            "baseName": "flavor",
            "type": "S3Flavor"
        },
        {
            "name": "keyPrefix",
            "baseName": "key-prefix",
            "type": "string"
        },
        {
            "name": "pathStyleAccess",
            "baseName": "path-style-access",
            "type": "boolean"
        },
        {
            "name": "region",
            "baseName": "region",
            "type": "string"
        },
        {
            "name": "stsEnabled",
            "baseName": "sts-enabled",
            "type": "boolean"
        },
        {
            "name": "stsRoleArn",
            "baseName": "sts-role-arn",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return S3Profile.attributeTypeMap;
    }
}

export namespace S3Profile {
}
