/**
 * iceberg-catalog
 * Implementation of the Iceberg REST Catalog server. 
 *
 * The version of the OpenAPI document: 0.4.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { UserType } from './userType';

export class CreateUserRequest {
    /**
    * Email of the user. If id is not specified, the email is extracted from the provided token.
    */
    'email'?: string | null;
    /**
    * Subject id of the user - allows user provisioning. The id must be identical to the subject in JWT tokens. To create users in self-service manner, do not set the id. The id is then extracted from the passed JWT token.
    */
    'id'?: string | null;
    /**
    * Name of the user. If id is not specified, the name is extracted from the provided token.
    */
    'name'?: string | null;
    /**
    * Update the user if it already exists Default: false
    */
    'updateIfExists'?: boolean;
    'userType'?: UserType | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "email",
            "baseName": "email",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "updateIfExists",
            "baseName": "update-if-exists",
            "type": "boolean"
        },
        {
            "name": "userType",
            "baseName": "user-type",
            "type": "UserType"
        }    ];

    static getAttributeTypeMap() {
        return CreateUserRequest.attributeTypeMap;
    }
}

export namespace CreateUserRequest {
}
