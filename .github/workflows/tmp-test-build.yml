name: tmp test build

on:
  push:
  workflow_dispatch:

jobs:
  build-binary:
    name: Build Binaries
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-24.04
            name: iceberg-catalog-x86_64-unknown-linux-gnu.tar.gz
            cross: false
            docker-build: false

          - target: x86_64-unknown-linux-musl
            os: ubuntu-24.04
            name: iceberg-catalog-x86_64-unknown-linux-musl.tar.gz
            cross: false
            docker-build: true

          - target: aarch64-unknown-linux-musl
            os: ubuntu-24.04-arm
            name: iceberg-catalog-aarch64-unknown-linux-musl.tar.gz
            cross: false
            docker-build: true
    runs-on: ${{ matrix.os }}
    continue-on-error: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        if: matrix.docker-build == false
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
          cache: false

      - name: Install cross
        if: matrix.cross == true
        uses: taiki-e/install-action@v2
        with:
          tool: cross

      - name: Build [Cargo]
        if: matrix.cross == false && matrix.docker-build == false
        run: cargo build --all-features --release --locked --target ${{ matrix.target }}

      - name: Build [Cross]
        if: matrix.cross == true && matrix.docker-build == false
        run: cross build --all-features --release --locked --target ${{ matrix.target }}

      #      - name: Prepare artifacts [Windows]
      #        if: matrix.os == 'windows-latest'
      #        run: |
      #          cd target/${{ matrix.target }}/release
      #          7z a ../../../${{ matrix.name }} iceberg-catalog.exe
      #          cd -

      - name: Prepare Docker [Docker build]
        if: matrix.docker-build == true
        uses: docker/setup-qemu-action@v3

      - name: Build Docker Image [Docker Build]
        if: matrix.docker-build == true
        run: |
          DOCKER_BUILDKIT=1 docker build -t localhost/build-lakekeeper:latest \
            -f docker-build/build-with-alpine3.21.Dockerfile .

      - name: Build [Docker Build]
        if: matrix.docker-build == true
        run: |
          docker run \
          -w /build --mount type=bind,src=$(pwd),target=/build \
          localhost/build-lakekeeper:latest \ 
          cargo build --release --all-features --locked --target ${{ matrix.target }}
